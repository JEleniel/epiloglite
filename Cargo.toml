[package]
name = "epiloglite"
version.workspace = true
edition.workspace = true
description = "EpilogLite is a pure Rust implementation of SQLite, designed for safety, reliability, and performance. It provides a drop-in compatible alternative to SQLite with modern Rust idioms."
license.workspace = true
keywords.workspace = true
categories.workspace = true

[workspace]
resolver = "3"
members = [".", "server"]

[workspace.package]
version = "1.0.0-alpha.1"
edition = "2024"
license = "MIT or Apache 2.0"
keywords = ["database", "relational", "sql", "sqlite"]
categories = ["database-implementations"]

[workspace.dependencies]
async-graphql = { version = "7.0" }
async-graphql-axum = { version = "7.0" }
async-trait = { version = "0.1" }
axum = { version = "0.7" }
bcrypt = { version = "0.15" }
bincode = { version = "1.3" }
chrono = { version = "0.4", features = ["serde"] }
config = { version = "0.14" }
fern = { version = "0.6", features = ["colored"] }
flagset = { version = "0.4.6", features = ["serde"] }
jsonwebtoken = { version = "9.3" }
log = { version = "0.4" }
logos = { version = "0.15.0" }
regex = { version = "1.11" }
rustls = { version = "0.23" }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
strum = { version = "0.27.2", features = ["derive"] }
thiserror = { version = "2.0" }
tokio = { version = "1", features = ["full"] }
tokio-rustls = { version = "0.26" }
tower = { version = "0.4" }
tower-http = { version = "0.5", features = ["cors", "trace"] }

[workspace.lints.rust]
missing_documentation = "warn"
unsafe_code = "deny"

[lib]
name = "epiloglite"
path = "src/lib.rs"

[dependencies]
async-trait.workspace = true
bincode.workspace = true  # TODO swap for serde-binary-adv
chrono.workspace = true
flagset.workspace = true
log.workspace = true
logos.workspace = true
regex.workspace = true
serde.workspace = true
serde_json.workspace = true
strum.workspace = true
thiserror.workspace = true
tokio.workspace = true

[features]
default = []
# Enable the "C" ABI compatibility layer (requires std)
cabi = []

[lints]
workspace = true
