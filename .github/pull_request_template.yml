---
name: Pull Request
description: Submit changes to the project
title: ''
labels: ''
assignees: ''

body:
  - type: markdown
    attributes:
      value: |
  Please fill out this pull request template. Fields marked as required should be completed where applicable. Small maintenance PRs may leave optional fields blank.

  **Rust-friendly example of a good PR:**

  ```text
  Type of Change:
  New Feature

  Breaking Changes:
  No

  Description:
  Added persistent rowid index and basic lookup APIs.
  - Implemented `RowIdIndex` with on-disk backing
  - Added unit and integration tests
  - Updated persistence documentation

  Related Issues:
  - Fixes #123

  Implementation Details:
  - New module `src/eplite/persistence/rowid_index.rs`
  - Uses existing pager API for storage

  Testing:
  - `cargo test --workspace` passes locally
  - Added unit and integration tests

  Checklist:
  - [x] Code follows rustfmt defaults
  - [x] Unit tests added
  - [x] Documentation updated
  - [x] Commits are focused
  ```

  - type: dropdown
    id: pr_type
    attributes:
      label: Type of Change (required)
      options:
        - bug_fix: Bug Fix
        - documentation: Documentation Update
        - new_feature: New Feature
        - performance_improvement: Performance Improvement
        - refactor: Code Refactor
        - security: Security Update
        - tests: Tests
      description: Select the type of change that best describes your PR.
      required: true

  - type: checkboxes
    id: breaking_change
    attributes:
      label: Breaking Change(s)
      options:
        - breaking_change: This change introduces a breaking change.
      description: Check if your PR introduces a breaking change.

  - type: checkboxes
    id: testing
    attributes:
      label: Testing Checklist
      options:
        - unit_tests_updated: Unit tests have been updated or added as necessary.
        - tests_running_locally: Tests run locally (`cargo test`) and CI is expected to pass.
        - manual_testing: Manual testing has been performed where applicable.
      description: Ensure that your changes have been adequately tested. Mark `tests_running_locally` when you verified `cargo test` locally. CI status will be checked by maintainers.
      required: false

  - type: checkboxes
    id: checklist
    attributes:
      label: PR Checklist (required)
      description: Please ensure the following items have been completed before submitting your PR.
      required: true
      options:
        - style_guidelines: Code adheres to the project's style guidelines.
        - code_commented: Code is well-commented, especially in complex areas.
        - documentation_updated: Relevant documentation has been updated to reflect changes.
        - commit_guidelines: Commit messages follow the project's guidelines.
        - local_review: Changes have been reviewed locally by another team member.
        - compiles_without_warnings: Code compiles without warnings. (false will be rejected)

  - type: textarea
    id: related_issues
    attributes:
      label: Related Issue(s)
      placeholder: List related issues here, e.g., Fixes #123
      required: false

  - type: textarea
    id: description
    attributes:
      label: Description (required)
      placeholder: Provide a detailed description of your changes.
      required: true

  - type: textarea
    id: implementation_details
    attributes:
      label: Implementation Details
      placeholder: Provide implementation details if relevant
      required: false

  - type: textarea
    id: additional_context
    attributes:
      label: Additional Context
      placeholder: Add any other context or screenshots about the PR here
      required: false
---

